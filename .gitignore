# Infracost
.infracost
infracost-base.json
plan.json
tfplan.binary
plan.html

# Local .terraform directories
.terraform

# Lock files
.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Terraform plan JSON for Infracost
plan.json

# Local environment
.env

# Compiled python modules.
*.pyc

# Setuptools distribution folder.
dist/
# Python egg metadata, regenerated from source files by setuptools.
/*.egg-info

# Artifacts created by python module build i.e. python3 setup.py build
build/

# Binary archives
*.tar.gz
*.tgz

# Temporary directory
tmp/

# Python virtualenv
venv/

# Tests
.coverage
.external_modules
cover/
code_coverage.xml
test_results.xml

# Editors
?.*
*.bak
.idea
.trunk
.vscode
.DS_Store

# OS-specific files
.DS_Store
.Trashes
Thumbs.db
